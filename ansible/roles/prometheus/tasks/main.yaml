---
# tasks for prometheus
- name: check if prometheus is already installed
  stat:
    path: "{{ prometheus_path }}"
  register: __check_prometheus_installation

- name: get version if prometheus is already installed
  shell: "cat {{ prometheus_service_file }} | grep Version | sed s/'.*Version '//g"
  when: __check_prometheus_installation.stat.exists == true
  changed_when: false
  register: __check_prometheus_version

- name: check if a file with a list of keys to launch prometheus exist
  stat:
    path: "/etc/default/{{ environment_file }}"
  register: __check_prometheus_keys

- name: create prometheus user
  user:
    name: "{{ prometheus_user }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    create_home: false

- name: create prometheus config dir
  file:
    path: "{{ prometheus_conf_dir }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"

- name: download and unzip prometheus
  unarchive:
    src: "{{ prometheus_install_file_link }}"
    dest: /tmp/
    remote_src: yes
    validate_certs: no

- name: move the binary to the final destination
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/prometheus"
    dest: "{{ prometheus_path }}"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755
    remote_src: yes
  when: __check_prometheus_installation.stat.exists == false or not __check_prometheus_version.stdout == prometheus_version

- name: copy prometheus config file
  ansible.builtin.copy:
    src: /tmp/prometheus-{{ prometheus_version }}.linux-amd64/prometheus.yml
    dest: "{{ prometheus_conf_dir }}"
    remote_src: yes

- name: create prometheus tsdb dir
  file:
    path: "{{ prometheus_tsdb_path }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"

- name: clean up tmp dir
  file:
    path: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/"
    state: absent

- name: install prometheus keys file
  ansible.builtin.template:
    src: prometheus.j2
    dest: "/etc/default/{{ environment_file }}"
    owner: root
    group: root
    mode: 0660

- name: install service prometheus
  ansible.builtin.template:
    src: prometheus.service.j2
    dest: "{{ prometheus_service_file }}"
    owner: root
    group: root
    mode: 0660
  notify:
    - reload_daemon_restart_prometheus

- name: force restart
  meta: flush_handlers

- name: start service prometheus
  become: true
  ansible.builtin.systemd:
    name: prometheus
    state: started
    enabled: true
